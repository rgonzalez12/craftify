# Generated by Django 5.1.3 on 2024-12-02 06:24

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(help_text='Enter your street address', max_length=255)),
                ('city', models.CharField(help_text='Enter your city', max_length=100)),
                ('state', models.CharField(help_text='Enter your state or province', max_length=100)),
                ('postal_code', models.CharField(help_text='Enter your postal code', max_length=20, validators=[django.core.validators.RegexValidator(message='Enter a valid postal code (e.g., 62701 or 62701-1234).', regex='^\\d{5}(-\\d{4})?$')])),
                ('country', models.CharField(help_text='Enter your country', max_length=100)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='UserExtended',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('bio', models.TextField(blank=True, help_text='User Bio', null=True)),
                ('country_code', models.CharField(help_text='Country Code for Phone Numbers', max_length=4, validators=[django.core.validators.RegexValidator(code='INVALID_PHONE_NUMBER', message="The country code must start with a '+' and be followed by up to 3 digits.", regex='^\\+\\d{1,3}$')])),
                ('date_of_birth', models.DateField(help_text='Enter your date of birth.')),
                ('drivers_license_number', models.CharField(help_text="Enter a valid driver's license number (6–16 characters).", max_length=16, validators=[django.core.validators.RegexValidator(code='INVALID_ID_NUMBER', message="Driver's license must be 6–16 alphanumeric characters.", regex='^[A-Za-z0-9]{6,16}$')])),
                ('phone_number', models.CharField(help_text='Enter your phone number.', max_length=15, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number.', regex='^\\+?\\d{10,15}$')])),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='userextended_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='userextended_set', to='auth.permission', verbose_name='user permissions')),
                ('address', models.OneToOneField(help_text="User's address", on_delete=django.db.models.deletion.CASCADE, to='craftify.address')),
            ],
            options={
                'verbose_name': 'Extended User Model',
                'verbose_name_plural': 'Extended User Models',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('reviewee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewed', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
